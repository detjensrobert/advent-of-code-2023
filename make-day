#!/bin/bash

set -eux

if [ -z "$1" ] ; then
  echo "usage: $0 <day>"
  exit 1
fi


DAY=$(printf '%02d' $1)
DIR=day$DAY

cargo new $DIR
cat > $DIR/src/main.rs <<RS
use std::env;
use std::fs;

type Input = &str;

fn main() {
    let args: Vec<String> = env::args().collect();
    assert!(args.len() >= 2, "no input given!");

    let infile = fs::read_to_string(&args[1]).unwrap();
    let lines: Vec<&str> = infile.split_terminator("\n").collect();

    let input = parse(&lines);

    part_one(&input);
    part_two(&input);
}


fn parse(lines: &[&str]) -> Vec<Input> {
    return lines.to_vec();
}


fn part_one(input: &[Input]) {
    println!("Part 1: {}", 0);
}

#[warn(unused_variables)]
fn part_two(input: &[Input]) {
    println!("Part 2: {}", 0);
}
RS


tomlq -i -t '.workspace.members += ["'$DIR'"]' Cargo.toml

(
  cd $DIR
  aoc download --day $DAY
  touch test
)
